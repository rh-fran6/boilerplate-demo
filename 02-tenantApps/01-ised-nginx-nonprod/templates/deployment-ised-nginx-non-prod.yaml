apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ .Values.global.applicationName }}
  annotations:
    reloader.stakater.com/auto: "true"
  name: {{ .Values.global.applicationName }}
spec:
  replicas: 1
  strategy:
    activeDeadline: 21600
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 120
      updatePeriodSeconds: 1
    type: Rolling
  selector:
    matchLabels:
      app: {{ .Values.global.applicationName }}
      deploymentconfig: {{ .Values.global.applicationName }}
  template:
    metadata:
      labels:
        app: {{ .Values.global.applicationName }}
        deploymentconfig: {{ .Values.global.applicationName }}
    spec:
      volumes:
        - name: config-dev-conf
          configMap:
            name: config-dev-conf
        - name: config-proxy-conf
          configMap:
            name: config-proxy-conf
        - name: config-robots-deny-all-conf
          configMap:
            name: config-robots-deny-all-conf
        - name: config-nginx-conf
          configMap:
            name: config-nginx-conf
        - name: maintenance-page
          configMap:
            name: maintenance-page  
  dnsPolicy: ClusterFirst
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  terminationGracePeriodSeconds: 30 
  containers:
    - image: ised-nginx:non-prod
      imagePullPolicy: Always
      name: ised-nginx
      ports:
        - containerPort: 8080
          protocol: TCP
        - containerPort: 9090
          protocol: TCP
      resources:
        requests:
          memory: 64Mi
          cpu: 250
        limits:
          memory: 128
          cpu: 500m    
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      env:
        - name: ENVIRONMENT
          value: non-prod
        - name: 
          valueFrom:
            secretKeyRef:
              key: 
              name: 
        - name: 
          valueFrom:
            configMapKeyRef:
              key: 
              name: 
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /robots.txt
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 180
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /robots.txt
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 180
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 
  volumesMounts:
    - name: config-dev-conf
      mountPath: /opt/app-root/etc/nginx.d/dev.conf
      subPath: dev.conf
    - name: config-proxy-conf
      mountPath: /opt/app-root/etc/nginx.d/proxy.conf
      subPath: proxy.conf
    - name: config-robots-deny-all-conf
      mountPath: /opt/app-root/etc/nginx.d/robots-deny-all.conf
      subPath: robots-deny-all.conf
    - name: config-nginx-conf
      mountPath: /etc/nginx/nginx.conf
      subPath: nginx.conf
    - name: maintenance-page
      mountPath: /opt/app-root/www/data/maintenance.html
      subPath: maintenance.html